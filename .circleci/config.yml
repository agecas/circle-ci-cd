version: 2.1

orbs:
  windows: circleci/windows@2.2.0

jobs:
  test:
    description: Setup and run application tests
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          name: 'Print Working Directory'
          command: pwd
      - run:
          working_directory: /src
          name: 'Print Working Directory'
          command: pwd
      - run:
          working_directory: /src
          name: 'Install project dependencies'
          command: dotnet restore
      - run:
          working_directory: /src
          name: 'Run Application Tests'
          command: dotnet test -v n --results-directory:test_coverage --collect:"Code Coverage"
      - run:
          working_directory: /src
          name: 'Print Working Directory'
          command: pwd
      - store_artifacts:
          path: C:\Users\circleci\project\test_coverage
  build:
    description: Build application with Release configuration
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          working_directory: /src
          name: 'Build Application according to some given configuration'
          command: dotnet build --configuration Release
workflows:
  test_and_build:
    jobs:
      - test
      - build:
          requires:
            - test
# version: 2.1
# jobs:
#   build:
#     working_directory: ~/src
#     docker:
#       - image: mcr.microsoft.com/dotnet/core/sdk:3.0 #circleci/node:7.10
#     steps:
#       - checkout
#       - run:
#           name: 'Show contents ...'
#           command: ls -al
#       - run:
#           name: 'Restore Dependencies'
#           command: cd src && dotnet restore
#       - run:
#           name: 'Creating folder for build output ...'
#           command: mkdir build_output
#       - run:
#           name: 'Build solution'
#           command: cd src && dotnet build --no-restore --configuration Release -p:Version=1.0.0 --output ../build_output
#       - run:
#           name: 'Show contents ...'
#           command: ls -al
#       - persist_to_workspace:
#           root: build_output
#           paths:
#             - '*'

#   test:
#     working_directory: ~/src
#     docker:
#       - image: mcr.microsoft.com/dotnet/core/sdk:3.0
#     steps:
#       - attach_workspace:
#           at: ~/workspace
#       - run: ls  -al
#       - run: dotnet vstest **/**.Tests/bin/Release/**/**.tests.dll

#   deploy:
#     docker:
#       - image: mcr.microsoft.com/dotnet/core/sdk:3.0
#     working_directory: ~/src
#     steps:
#       - run: echo deploy step

# workflows:
#   version: 2.1
#   build-and-test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#       - hold:
#           type: approval
#           requires:
#             - test
#       - deploy:
#           requires:
#             - hold
#           filters:
#             branches:
#               only:
#                 - master
